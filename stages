pipeline {
    agent any
    
    stages {
        stage('notify') {
            steps {
                // Checkout code from GitHub repository
                git 'https://github.com/nouman392/JenkinsAssignment.git'
            }
        }
        stage('Build') {
            steps {
                echo "Building the code using Maven"
                mail to:"noumanali784@gmail.com",
                subject:"building status email",
                body:"building log attached"
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                echo "Running unit tests using JUnit"
                echo "Running integration tests using Selenium"
                echo "Use JUnit for unit tests and Selenium for integration tests"
            }
        }
        
        stage('Code Analysis') {
            steps {
                echo "Analyzing code using SonarQube"
                echo "Integrate SonarQube for code analysis"
            }
        }
        
        stage('Security Scan') {
            steps {
                echo "Performing security scan using OWASP ZAP"
                echo "Use OWASP ZAP for security scanning"
            }
              post {
                always {
                    // Send email notification with logs attached
                    mail(
                        to: 'noumanali784@gmail.com',
                        subject: 'Security Scan Status',
                        body: 'Security scan completed with status: ' + currentBuild.result,
                        attachLog: true
                    )
                }
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                echo "Deploying the application to a staging server (e.g., AWS EC2 instance)"
                // Use Jenkins to deploy to staging, or use deployment tools like Ansible or Terraform
            }
        }
        
        stage('Integration Tests on Staging') {
            steps {
                echo "Running integration tests on the staging environment"
                // Use Selenium or similar tools to run integration tests on staging
            }
        }
        
        stage('Deploy to Production') {
            steps {
                echo "Deploying the application to a production server (e.g., AWS EC2 instance)"
                // Use Jenkins to deploy to production, or use deployment tools like Ansible or Terraform
            }
        }
    }
    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
        always {
            // Always actions regardless of success or failure
            // Notify the developers with an email
            mail(
                to: 'noumanali784@gmail.com',
                subject: 'Pipeline Status: ' + currentBuild.result,
                body: 'The pipeline has finished with status: ' + currentBuild.result,
                attachLog: true
            )
        }
    }
}



